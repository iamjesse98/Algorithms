#include<iostream>
#include<vector>
#include<fstream>
#include<list>

using namespace std;

long partition(vector<double>& x, int left, int right, long& sum){
    int pivot = x[left];
    int i=left+1, j=left+1;
    sum=0;
    while(j<=right){
	if(x[j]<pivot){
	    swap(x[i++],x[j++]);	    
	    cout << x[i] << " " << x[j] <<endl;

	}
	else{
	    j++;
	}
	sum++;
    }
    swap(x[left],x[i-1]);
    cout << x[left] << " " << x[i-1] <<endl;

    return i-1;
}

long quicksort(vector<double>& x, int left, int right){
    if(left>=right)
	return 0;
    long tmp;
    int c = partition(x, left, right, tmp);    
    return quicksort(x, left, c-1) + quicksort(x, c+1, right)+ tmp;
}


int main(int argc, char** argv){
    ifstream input(argv[1]);
    int n;
    vector<double> x(n);
    input >> n;
    for(int i=0; i<n; i++){
	input >> x[i];
    }
    long ret = quicksort(x,0,n-1);

    cout << ret <<endl;
    return 0;
}
